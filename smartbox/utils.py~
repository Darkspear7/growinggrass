# Event class for smartbox, most events are either a key event or
# a cursor event

from collections import namedtuple

KeyEventAttributes = {'delim','char'}
CursorEventAttributes = {'direction'}

class Event:
    """i think this is a documentation string, i`m not sure"""
    def __init__(self, eventType):
        if eventType == "key":
            self.__type = 1
        elif eventType == "cursor":
            self.__type = 2
        else:
            raise Exception("Invalid event type")
    def isKeyEvent(self):
        return self.__type == 1
    def isCursorEvent(self):
        return self.__type == 2
    def addAttrib(self,name,value):
        if self.isKeyEvent() and name in KeyEventAttributes and value.__name__ == KeyEventAttributes[name]:
            setattr(self,name,value)
        elif self.isCursorEvent() and name in CursorEventAttributes and value.__name__ == CursorEventAttributes[name]:
            setattr(self,name,value)
        else:
            raise Exception("Invalid attribute for event")
    def getAttrib(self,name):
        return getattr(self,name,None)
